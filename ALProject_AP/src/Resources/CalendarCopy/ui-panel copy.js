// ui-panel.js - Detail panel setup and management

function initializeDetailPanel(container) {
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô)
  detailPanel = document.createElement("div");
  detailPanel.id = "eventDetailPanel";
  detailPanel.style.width = "320px";
  detailPanel.style.maxWidth = "350px";
  detailPanel.style.padding = "10px";
  detailPanel.style.borderRight = "1px solid #ccc";
  detailPanel.style.height = "100%";
  detailPanel.style.backgroundColor = "#f9f9f9";
  detailPanel.style.fontFamily = "'Inter', sans-serif";
  detailPanel.style.position = "absolute";
  detailPanel.style.left = "-340px"; //‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ã‡πâ‡∏≠‡∏ô ‡∏ï‡∏≠‡∏ô‡∏Å‡∏î ‚úñ ‡∏à‡∏∞‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏µ‡∏Å‡∏≠‡∏±‡∏ô
  detailPanel.style.top = "0";
  detailPanel.style.transition = "left 0.3s ease";
  detailPanel.style.zIndex = "1000";
  detailPanel.innerHTML = `
    <style>
      .tab-container {
        display: inline-flex;
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 8px 16px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        margin-top: 10px;
      }

      .tab-btn {
        background: transparent;
        border: none;
        margin: 0 6px;
        padding: 6px 12px;
        font-size: 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
        cursor: pointer;
        color: #333;
      }

      .tab-btn.active {
        background-color: #aec9f3ff;
        color: white;
      }

      .tab-btn:hover:not(.active) {
        background-color: #e2e6ea;
      }
    </style>

    <div style="display: flex; justify-content: space-between; align-items: center;">
      <strong>üìå ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</strong>
      <button id="closePanel" style="border: none; background: none; font-size: 18px;">‚úñ</button>
    </div>

    <div class="tab-container" id="tabBox">
      <button id="tabDetail" class="tab-btn active">üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</button>
      <button id="tabRouting" class="tab-btn">üß™</button>
      <button id="tabComponents" class="tab-btn">üì¶</button>
    </div>

    <div id="tabContentDetail" style="margin-top: 10px;"></div>
    <div id="tabContentRouting" style="margin-top: 10px; display: none;"></div>
    <div id="tabContentComponents" style="margin-top: 10px; display: none;"></div>
  `;
  container.appendChild(detailPanel);

  // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á panel ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏™‡πà listener ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î panel
  document.getElementById("closePanel").addEventListener("click", hideDetailPanel);

  // ‡∏î‡∏∂‡∏á element ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
  eventDetailTab = document.getElementById("tabDetail");
  routingTab = document.getElementById("tabRouting");
  tabContentDetail = document.getElementById("tabContentDetail");
  tabContentRouting = document.getElementById("tabContentRouting");

  // Setup tab functionality
  setupTabFunctionality();
}

function setupTabFunctionality() {
  const tabs = [
    { id: "tabDetail", icon: "üìÑ", label: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" },
    { id: "tabRouting", icon: "üß™", label: "Routing" },
    { id: "tabComponents", icon: "üì¶", label: "Components" }
  ];

  function setActiveTab(selectedId) {
    tabs.forEach(tab => {
      const btn = document.getElementById(tab.id);
      const content = document.getElementById("tabContent" + tab.id.replace("tab", ""));
      if (tab.id === selectedId) {
        btn.classList.add("active");
        btn.textContent = `${tab.icon} ${tab.label}`;
        content.style.display = "block";
      } else {
        btn.classList.remove("active");
        btn.textContent = `${tab.icon}`;
        content.style.display = "none";
      }
    });
  }

  tabs.forEach(tab => {
    const btn = document.getElementById(tab.id);
    btn.addEventListener("click", () => {
      setActiveTab(tab.id);
    });
  });

  const componentsTab = document.getElementById("tabComponents");

  // listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö tabComponents
  componentsTab.addEventListener("click", () => {
    setActiveTab("tabComponents");
    LoadComponentEvents(SelectedProdOrderNo);
  });
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏π‡∏ó
function showDetailPanel() {
  detailPanel.style.left = "0";
}

// ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ú‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢
function hideDetailPanel() {
  detailPanel.style.left = "-340px";
}